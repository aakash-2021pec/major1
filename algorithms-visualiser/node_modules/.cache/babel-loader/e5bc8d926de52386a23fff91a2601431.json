{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sharm\\\\OneDrive\\\\Documents\\\\GitHub\\\\major1\\\\algorithms-visualiser\\\\src\\\\searchingAlgorithms\\\\binarySearch\\\\binarySearch.jsx\";\nimport React from \"react\";\nimport { randomIntFromInterval } from \"./../../utils/randomIntFromInterval.js\";\nimport { binarySearchAnimations } from \"./../searchingAlgorithms\";\nimport Header from \"./../../utils/header\";\nimport ArrayTile from \"./../arrayTile\";\nimport BackBar from \"./../../utils/backbar\"; //Stylesheets\n\nimport \"./binarySearch.css\";\nconst NUMBER_OF_ARRAY_BARS = 15;\nconst DEFAULT_COLOR = \"#6376f1\";\nconst FOUND_COLOR = \"#28B463\";\nconst NOT_FOUND_COLOR = \"#F16388\";\nconst ANIMATION_SPEED_SECONDS = 3;\nexport default class BinarySearch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: [],\n      found: false,\n      disabled: false,\n      elementFoundAt: 0,\n      target: null,\n      msgAfterExecution: null,\n      previousLength: 0,\n      animations: []\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    let array = [];\n    const prevArray = document.getElementsByClassName(\"b-array-bar\");\n    document.getElementById(\"binarySearchTargetVal\").value = \"\";\n\n    for (let idx = 0; idx < prevArray.length; idx++) {\n      prevArray[idx].style.backgroundColor = DEFAULT_COLOR;\n      prevArray[idx].classList.remove(\"growFind\");\n      prevArray[idx].classList.remove(\"highlight\");\n    }\n\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n      array.push(randomIntFromInterval(5, 850));\n    }\n\n    let sortedArray = array.slice().sort((a, b) => a - b);\n    this.setState({\n      array: sortedArray,\n      found: false,\n      disabled: false,\n      msgAfterExecution: null,\n      previousLength: this.state.animations.length\n    });\n  }\n\n  hightlightWithinBounds(start, end, arrayTiles) {\n    for (let i = start; i <= end; i++) {\n      arrayTiles[i].style.backgroundColor = NOT_FOUND_COLOR;\n      arrayTiles[i].style.transition = \"100ms all\";\n    }\n  }\n\n  resetAllTiles(arrayTiles) {\n    for (let i = 0; i < arrayTiles.length; i++) {\n      arrayTiles[i].style.backgroundColor = DEFAULT_COLOR;\n      arrayTiles[i].style.transition = \"100ms all\";\n    }\n  }\n\n  binarySearch() {\n    const {\n      array\n    } = this.state;\n    const animations = [];\n    let count = 0;\n    const arrayTiles = document.getElementsByClassName(\"b-array-bar\");\n    const target = document.getElementById(\"binarySearchTargetVal\").value;\n    if (target === \"\") return;\n    binarySearchAnimations(array, 0, array.length - 1, parseInt(target), animations);\n\n    for (let k = 0; k < animations.length; k++) {\n      const [left, right, mid, found] = animations[k];\n      count++;\n\n      if (k === animations.length - 1 && found) {\n        setTimeout(() => {\n          this.setState({\n            disabled: true,\n            found: true\n          });\n          this.resetAllTiles(arrayTiles);\n          arrayTiles[mid].classList.add(\"highlight\");\n          arrayTiles[mid].style.backgroundColor = FOUND_COLOR;\n        }, (k + 1) * ANIMATION_SPEED_SECONDS * 1000);\n      }\n\n      if (left === 0 && right === 0 && mid === 0 && !found) {\n        setTimeout(() => {\n          console.log(\"ELement not found\");\n          this.setState({\n            msgAfterExecution: `Element not found`,\n            found: false\n          });\n          this.resetAllTiles(arrayTiles);\n        }, (k + 1) * ANIMATION_SPEED_SECONDS * 1000);\n      }\n\n      setTimeout(() => {\n        this.setState({\n          disabled: true\n        });\n        this.resetAllTiles(arrayTiles);\n        this.hightlightWithinBounds(left, right, arrayTiles);\n      }, k * 1000 * ANIMATION_SPEED_SECONDS);\n    }\n\n    setTimeout(() => {\n      this.setState({\n        disabled: false\n      });\n    }, count * 1000 * ANIMATION_SPEED_SECONDS);\n  }\n\n  render() {\n    const {\n      array,\n      found,\n      disabled,\n      msgAfterExecution\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BackBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron jumbotron-fluid bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      title: \"Binary Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group col-sm-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"binarySearchTargetVal\",\n      className: \"form-control\",\n      placeholder: \"Find Element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.binarySearch(),\n      className: \"btn btn-success\",\n      type: \"button\",\n      id: \"binarySearchBtn\",\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 41\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.resetArray(),\n      className: \"btn btn-danger\",\n      id: \"binarySearchResetArray\",\n      type: \"button\",\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 41\n      }\n    }, \"Reset Array\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-1 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 33\n      }\n    }))), !found ? /*#__PURE__*/React.createElement(\"p\", {\n      className: \"not-found\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }, msgAfterExecution) : null, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    }, array.map((value, idx) => /*#__PURE__*/React.createElement(ArrayTile, {\n      type: \"binarySearch\",\n      key: idx,\n      idx: idx,\n      val: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/sharm/OneDrive/Documents/GitHub/major1/algorithms-visualiser/src/searchingAlgorithms/binarySearch/binarySearch.jsx"],"names":["React","randomIntFromInterval","binarySearchAnimations","Header","ArrayTile","BackBar","NUMBER_OF_ARRAY_BARS","DEFAULT_COLOR","FOUND_COLOR","NOT_FOUND_COLOR","ANIMATION_SPEED_SECONDS","BinarySearch","Component","constructor","props","state","array","found","disabled","elementFoundAt","target","msgAfterExecution","previousLength","animations","componentDidMount","resetArray","prevArray","document","getElementsByClassName","getElementById","value","idx","length","style","backgroundColor","classList","remove","i","push","sortedArray","slice","sort","a","b","setState","hightlightWithinBounds","start","end","arrayTiles","transition","resetAllTiles","binarySearch","count","parseInt","k","left","right","mid","setTimeout","add","console","log","render","map"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport { randomIntFromInterval } from \"./../../utils/randomIntFromInterval.js\";\r\nimport { binarySearchAnimations } from \"./../searchingAlgorithms\";\r\n\r\nimport Header from \"./../../utils/header\";\r\nimport ArrayTile from \"./../arrayTile\";\r\n\r\nimport BackBar from \"./../../utils/backbar\";\r\n\r\n//Stylesheets\r\nimport \"./binarySearch.css\";\r\n\r\nconst NUMBER_OF_ARRAY_BARS = 15;\r\nconst DEFAULT_COLOR = \"#6376f1\";\r\nconst FOUND_COLOR = \"#28B463\";\r\nconst NOT_FOUND_COLOR = \"#F16388\";\r\nconst ANIMATION_SPEED_SECONDS = 3;\r\n\r\nexport default class BinarySearch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            array: [],\r\n            found: false,\r\n            disabled: false,\r\n            elementFoundAt: 0,\r\n            target: null,\r\n            msgAfterExecution: null,\r\n            previousLength: 0,\r\n            animations: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resetArray();\r\n    }\r\n\r\n    resetArray() {\r\n        let array = [];\r\n        const prevArray = document.getElementsByClassName(\"b-array-bar\");\r\n        document.getElementById(\"binarySearchTargetVal\").value = \"\";\r\n        for (let idx = 0; idx < prevArray.length; idx++) {\r\n            prevArray[idx].style.backgroundColor = DEFAULT_COLOR;\r\n            prevArray[idx].classList.remove(\"growFind\");\r\n            prevArray[idx].classList.remove(\"highlight\");\r\n        }\r\n        for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\r\n            array.push(randomIntFromInterval(5, 850));\r\n        }\r\n        let sortedArray = array.slice().sort((a, b) => a - b);\r\n        this.setState({\r\n            array: sortedArray,\r\n            found: false,\r\n            disabled: false,\r\n            msgAfterExecution: null,\r\n            previousLength: this.state.animations.length,\r\n        });\r\n    }\r\n\r\n    hightlightWithinBounds(start, end, arrayTiles) {\r\n        for (let i = start; i <= end; i++) {\r\n            arrayTiles[i].style.backgroundColor = NOT_FOUND_COLOR;\r\n            arrayTiles[i].style.transition = \"100ms all\";\r\n        }\r\n    }\r\n\r\n    resetAllTiles(arrayTiles) {\r\n        for (let i = 0; i < arrayTiles.length; i++) {\r\n            arrayTiles[i].style.backgroundColor = DEFAULT_COLOR;\r\n            arrayTiles[i].style.transition = \"100ms all\";\r\n        }\r\n    }\r\n\r\n    binarySearch() {\r\n        const { array } = this.state;\r\n        const animations = [];\r\n        let count = 0;\r\n        const arrayTiles = document.getElementsByClassName(\"b-array-bar\");\r\n        const target = document.getElementById(\"binarySearchTargetVal\").value;\r\n        if (target === \"\") return;\r\n\r\n        binarySearchAnimations(\r\n            array,\r\n            0,\r\n            array.length - 1,\r\n            parseInt(target),\r\n            animations\r\n        );\r\n\r\n        for (let k = 0; k < animations.length; k++) {\r\n            const [left, right, mid, found] = animations[k];\r\n            count++;\r\n\r\n            if (k === animations.length - 1 && found) {\r\n                setTimeout(() => {\r\n                    this.setState({ disabled: true, found: true });\r\n                    this.resetAllTiles(arrayTiles);\r\n                    arrayTiles[mid].classList.add(\"highlight\");\r\n                    arrayTiles[mid].style.backgroundColor = FOUND_COLOR;\r\n                }, (k + 1) * ANIMATION_SPEED_SECONDS * 1000);\r\n            }\r\n\r\n            if (left === 0 && right === 0 && mid === 0 && !found) {\r\n                setTimeout(() => {\r\n                    console.log(\"ELement not found\");\r\n                    this.setState({\r\n                        msgAfterExecution: `Element not found`,\r\n                        found: false,\r\n                    });\r\n                    this.resetAllTiles(arrayTiles);\r\n                }, (k + 1) * ANIMATION_SPEED_SECONDS * 1000);\r\n            }\r\n\r\n            setTimeout(() => {\r\n                this.setState({ disabled: true });\r\n                this.resetAllTiles(arrayTiles);\r\n                this.hightlightWithinBounds(left, right, arrayTiles);\r\n            }, k * 1000 * ANIMATION_SPEED_SECONDS);\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.setState({ disabled: false });\r\n        }, count * 1000 * ANIMATION_SPEED_SECONDS);\r\n    }\r\n\r\n    render() {\r\n        const { array, found, disabled, msgAfterExecution } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <BackBar />\r\n                <div className=\"jumbotron jumbotron-fluid bg-light\">\r\n                    <center>\r\n                        <Header title=\"Binary Search\" />\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-1\"></div>\r\n                                <div className=\"input-group col-sm-10\">\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        id=\"binarySearchTargetVal\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Find Element\"\r\n                                    />\r\n                                    <div className=\"input-group-append\">\r\n                                        <button\r\n                                            onClick={() => this.binarySearch()}\r\n                                            className=\"btn btn-success\"\r\n                                            type=\"button\"\r\n                                            id=\"binarySearchBtn\"\r\n                                            disabled={disabled}\r\n                                        >\r\n                                            Search\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={() => this.resetArray()}\r\n                                            className=\"btn btn-danger\"\r\n                                            id=\"binarySearchResetArray\"\r\n                                            type=\"button\"\r\n                                            disabled={disabled}\r\n                                        >\r\n                                            Reset Array\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-1 \"></div>\r\n                            </div>\r\n                        </div>\r\n                        {!found ? (\r\n                            <p className=\"not-found\">{msgAfterExecution}</p>\r\n                        ) : null}\r\n                        <br />\r\n                        <div className=\"container\">\r\n                            {array.map((value, idx) => (\r\n                                <ArrayTile\r\n                                    type={\"binarySearch\"}\r\n                                    key={idx}\r\n                                    idx={idx}\r\n                                    val={value}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </center>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}