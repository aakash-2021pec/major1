{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sharm\\\\OneDrive\\\\Documents\\\\GitHub\\\\major1\\\\algorithms-visualiser\\\\src\\\\searchingAlgorithms\\\\linearSearch\\\\linearSearch.jsx\";\nimport React from \"react\";\nimport { randomIntFromInterval } from \"./../../utils/randomIntFromInterval.js\";\nimport { linearSearchAnimations } from \"./../searchingAlgorithms\";\nimport Header from \"./../../utils/header\";\nimport ArrayTile from \"./../arrayTile\";\nimport BackBar from \"./../../utils/backbar\"; // Stylesheets\n\nimport \"./linearSearch.css\";\nconst NUMBER_OF_ARRAY_BARS = 15;\nconst DEFAULT_COLOR = \"#6376f1\";\nconst FOUND_COLOR = \"#28B463\";\nconst NOT_FOUND_COLOR = \"#F16388\";\nconst ANIMATION_SPEED_SECONDS = 1;\nexport default class LinearSearch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: [],\n      found: false,\n      disabled: false,\n      elementFoundAt: 0,\n      target: null,\n      msgAfterExecution: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n    const prevArray = document.getElementsByClassName(\"l-array-bar\");\n    const found = false;\n    const disabled = false;\n    document.getElementById(\"targetVal\").value = \"\";\n\n    for (let idx = 0; idx < prevArray.length; idx++) {\n      prevArray[idx].style.backgroundColor = DEFAULT_COLOR;\n      prevArray[idx].classList.remove(\"growFind\");\n      prevArray[idx].classList.remove(\"highlight\");\n    }\n\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n      array.push(randomIntFromInterval(5, 730));\n    }\n\n    this.setState({\n      array,\n      found,\n      disabled,\n      msgAfterExecution: \"\"\n    });\n  }\n\n  linearSearch() {\n    var msg = \"\";\n    const target = document.getElementById(\"targetVal\").value;\n    if (target === \"\") return;\n    const animations = linearSearchAnimations(this.state.array, target);\n    console.log(animations);\n    let count = 0;\n\n    for (let i = 0; i < animations.length; i++) {\n      const [idx, currentEle, found] = animations[i];\n      const arrayBars = document.getElementsByClassName(\"l-array-bar\");\n      const arrayBar = arrayBars[idx];\n      const arrayBarStyle = arrayBar.style;\n      count++;\n\n      if (found) {\n        msg = `${currentEle} found at index ${idx}`;\n        setTimeout(() => {\n          this.setState({\n            found: true,\n            disabled: true,\n            elementFoundAt: idx,\n            target: currentEle\n          });\n          arrayBarStyle.backgroundColor = FOUND_COLOR;\n          arrayBar.classList.add(\"growFind\");\n          arrayBar.classList.add(\"highlight\");\n        }, i * ANIMATION_SPEED_SECONDS * 1000);\n        break;\n      } else {\n        msg = `${target} not found`;\n        setTimeout(() => {\n          this.setState({\n            found: false,\n            disabled: true\n          });\n          arrayBarStyle.backgroundColor = NOT_FOUND_COLOR;\n          arrayBar.classList.add(\"growFind\");\n        }, i * ANIMATION_SPEED_SECONDS * 1000);\n      }\n    }\n\n    setTimeout(() => {\n      this.setState({\n        disabled: false,\n        msgAfterExecution: msg\n      });\n    }, (count + 1) * ANIMATION_SPEED_SECONDS * 1000);\n  }\n\n  render() {\n    const {\n      array,\n      found,\n      disabled,\n      msgAfterExecution\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BackBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron jumbotron-fluid bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      title: \"Linear Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group col-sm-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"targetVal\",\n      className: \"form-control\",\n      placeholder: \"Find Element\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.linearSearch(),\n      className: \"btn btn-success\",\n      type: \"button\",\n      id: \"button-addon2\",\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 41\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.resetArray(),\n      className: \"btn btn-danger\",\n      id: \"resetArray\",\n      type: \"button\",\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 41\n      }\n    }, \"Reset Array\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-1 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }), !found ? /*#__PURE__*/React.createElement(\"p\", {\n      className: \"found growFind\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }, msgAfterExecution) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }, array.map((value, idx) => /*#__PURE__*/React.createElement(ArrayTile, {\n      type: `linearSearch`,\n      key: idx,\n      idx: idx,\n      val: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/sharm/OneDrive/Documents/GitHub/major1/algorithms-visualiser/src/searchingAlgorithms/linearSearch/linearSearch.jsx"],"names":["React","randomIntFromInterval","linearSearchAnimations","Header","ArrayTile","BackBar","NUMBER_OF_ARRAY_BARS","DEFAULT_COLOR","FOUND_COLOR","NOT_FOUND_COLOR","ANIMATION_SPEED_SECONDS","LinearSearch","Component","constructor","props","state","array","found","disabled","elementFoundAt","target","msgAfterExecution","componentDidMount","resetArray","prevArray","document","getElementsByClassName","getElementById","value","idx","length","style","backgroundColor","classList","remove","i","push","setState","linearSearch","msg","animations","console","log","count","currentEle","arrayBars","arrayBar","arrayBarStyle","setTimeout","add","render","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,qBAAT,QAAsC,wCAAtC;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,OAAOC,OAAP,MAAoB,uBAApB,C,CAEA;;AACA,OAAO,oBAAP;AAEA,MAAMC,oBAAoB,GAAG,EAA7B;AACA,MAAMC,aAAa,GAAG,SAAtB;AACA,MAAMC,WAAW,GAAG,SAApB;AACA,MAAMC,eAAe,GAAG,SAAxB;AACA,MAAMC,uBAAuB,GAAG,CAAhC;AAEA,eAAe,MAAMC,YAAN,SAA2BX,KAAK,CAACY,SAAjC,CAA2C;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,KAAK,EAAE,KAFE;AAGTC,MAAAA,QAAQ,EAAE,KAHD;AAITC,MAAAA,cAAc,EAAE,CAJP;AAKTC,MAAAA,MAAM,EAAE,IALC;AAMTC,MAAAA,iBAAiB,EAAE;AANV,KAAb;AAQH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL;AACH;;AAEDA,EAAAA,UAAU,GAAG;AACT,UAAMP,KAAK,GAAG,EAAd;AACA,UAAMQ,SAAS,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,CAAlB;AACA,UAAMT,KAAK,GAAG,KAAd;AACA,UAAMC,QAAQ,GAAG,KAAjB;AACAO,IAAAA,QAAQ,CAACE,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,GAA6C,EAA7C;;AACA,SAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGL,SAAS,CAACM,MAAlC,EAA0CD,GAAG,EAA7C,EAAiD;AAC7CL,MAAAA,SAAS,CAACK,GAAD,CAAT,CAAeE,KAAf,CAAqBC,eAArB,GAAuCzB,aAAvC;AACAiB,MAAAA,SAAS,CAACK,GAAD,CAAT,CAAeI,SAAf,CAAyBC,MAAzB,CAAgC,UAAhC;AACAV,MAAAA,SAAS,CAACK,GAAD,CAAT,CAAeI,SAAf,CAAyBC,MAAzB,CAAgC,WAAhC;AACH;;AACD,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7B,oBAApB,EAA0C6B,CAAC,EAA3C,EAA+C;AAC3CnB,MAAAA,KAAK,CAACoB,IAAN,CAAWnC,qBAAqB,CAAC,CAAD,EAAI,GAAJ,CAAhC;AACH;;AACD,SAAKoC,QAAL,CAAc;AAAErB,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA,QAAhB;AAA0BG,MAAAA,iBAAiB,EAAE;AAA7C,KAAd;AACH;;AAEDiB,EAAAA,YAAY,GAAG;AACX,QAAIC,GAAG,GAAG,EAAV;AACA,UAAMnB,MAAM,GAAGK,QAAQ,CAACE,cAAT,CAAwB,WAAxB,EAAqCC,KAApD;AACA,QAAIR,MAAM,KAAK,EAAf,EAAmB;AACnB,UAAMoB,UAAU,GAAGtC,sBAAsB,CAAC,KAAKa,KAAL,CAAWC,KAAZ,EAAmBI,MAAnB,CAAzC;AACAqB,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,QAAIG,KAAK,GAAG,CAAZ;;AAEA,SAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,UAAU,CAACV,MAA/B,EAAuCK,CAAC,EAAxC,EAA4C;AACxC,YAAM,CAACN,GAAD,EAAMe,UAAN,EAAkB3B,KAAlB,IAA2BuB,UAAU,CAACL,CAAD,CAA3C;AACA,YAAMU,SAAS,GAAGpB,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,CAAlB;AACA,YAAMoB,QAAQ,GAAGD,SAAS,CAAChB,GAAD,CAA1B;AACA,YAAMkB,aAAa,GAAGD,QAAQ,CAACf,KAA/B;AAEAY,MAAAA,KAAK;;AAEL,UAAI1B,KAAJ,EAAW;AACPsB,QAAAA,GAAG,GAAI,GAAEK,UAAW,mBAAkBf,GAAI,EAA1C;AACAmB,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKX,QAAL,CAAc;AACVpB,YAAAA,KAAK,EAAE,IADG;AAEVC,YAAAA,QAAQ,EAAE,IAFA;AAGVC,YAAAA,cAAc,EAAEU,GAHN;AAIVT,YAAAA,MAAM,EAAEwB;AAJE,WAAd;AAMAG,UAAAA,aAAa,CAACf,eAAd,GAAgCxB,WAAhC;AACAsC,UAAAA,QAAQ,CAACb,SAAT,CAAmBgB,GAAnB,CAAuB,UAAvB;AACAH,UAAAA,QAAQ,CAACb,SAAT,CAAmBgB,GAAnB,CAAuB,WAAvB;AACH,SAVS,EAUPd,CAAC,GAAGzB,uBAAJ,GAA8B,IAVvB,CAAV;AAWA;AACH,OAdD,MAcO;AACH6B,QAAAA,GAAG,GAAI,GAAEnB,MAAO,YAAhB;AACA4B,QAAAA,UAAU,CAAC,MAAM;AACb,eAAKX,QAAL,CAAc;AACVpB,YAAAA,KAAK,EAAE,KADG;AAEVC,YAAAA,QAAQ,EAAE;AAFA,WAAd;AAIA6B,UAAAA,aAAa,CAACf,eAAd,GAAgCvB,eAAhC;AACAqC,UAAAA,QAAQ,CAACb,SAAT,CAAmBgB,GAAnB,CAAuB,UAAvB;AACH,SAPS,EAOPd,CAAC,GAAGzB,uBAAJ,GAA8B,IAPvB,CAAV;AAQH;AACJ;;AACDsC,IAAAA,UAAU,CAAC,MAAM;AACb,WAAKX,QAAL,CAAc;AACVnB,QAAAA,QAAQ,EAAE,KADA;AAEVG,QAAAA,iBAAiB,EAAEkB;AAFT,OAAd;AAIH,KALS,EAKP,CAACI,KAAK,GAAG,CAAT,IAAcjC,uBAAd,GAAwC,IALjC,CAAV;AAMH;;AAEDwC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAElC,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA,QAAhB;AAA0BG,MAAAA;AAA1B,QAAgD,KAAKN,KAA3D;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,EAAE,EAAC,WAFP;AAGI,MAAA,SAAS,EAAC,cAHd;AAII,MAAA,WAAW,EAAC,cAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAOI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,OAAO,EAAE,MAAM,KAAKuB,YAAL,EADnB;AAEI,MAAA,SAAS,EAAC,iBAFd;AAGI,MAAA,IAAI,EAAC,QAHT;AAII,MAAA,EAAE,EAAC,eAJP;AAKI,MAAA,QAAQ,EAAEpB,QALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI;AACI,MAAA,OAAO,EAAE,MAAM,KAAKK,UAAL,EADnB;AAEI,MAAA,SAAS,EAAC,gBAFd;AAGI,MAAA,EAAE,EAAC,YAHP;AAII,MAAA,IAAI,EAAC,QAJT;AAKI,MAAA,QAAQ,EAAEL,QALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVJ,CAPJ,CAFJ,eA8BI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BJ,CADJ,CAFJ,eAoCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApCJ,EAqCK,CAACD,KAAD,gBACG;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKI,iBADL,CADH,GAIG,IAzCR,eA0CI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKL,KAAK,CAACmC,GAAN,CAAU,CAACvB,KAAD,EAAQC,GAAR,kBACP,oBAAC,SAAD;AACI,MAAA,IAAI,EAAG,cADX;AAEI,MAAA,GAAG,EAAEA,GAFT;AAGI,MAAA,GAAG,EAAEA,GAHT;AAII,MAAA,GAAG,EAAED,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CA1CJ,CADJ,CAFJ,CADJ;AA4DH;;AApJqD","sourcesContent":["import React from \"react\";\r\nimport { randomIntFromInterval } from \"./../../utils/randomIntFromInterval.js\";\r\nimport { linearSearchAnimations } from \"./../searchingAlgorithms\";\r\n\r\nimport Header from \"./../../utils/header\";\r\nimport ArrayTile from \"./../arrayTile\";\r\n\r\nimport BackBar from \"./../../utils/backbar\";\r\n\r\n// Stylesheets\r\nimport \"./linearSearch.css\";\r\n\r\nconst NUMBER_OF_ARRAY_BARS = 15;\r\nconst DEFAULT_COLOR = \"#6376f1\";\r\nconst FOUND_COLOR = \"#28B463\";\r\nconst NOT_FOUND_COLOR = \"#F16388\";\r\nconst ANIMATION_SPEED_SECONDS = 1;\r\n\r\nexport default class LinearSearch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            array: [],\r\n            found: false,\r\n            disabled: false,\r\n            elementFoundAt: 0,\r\n            target: null,\r\n            msgAfterExecution: \"\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resetArray();\r\n    }\r\n\r\n    resetArray() {\r\n        const array = [];\r\n        const prevArray = document.getElementsByClassName(\"l-array-bar\");\r\n        const found = false;\r\n        const disabled = false;\r\n        document.getElementById(\"targetVal\").value = \"\";\r\n        for (let idx = 0; idx < prevArray.length; idx++) {\r\n            prevArray[idx].style.backgroundColor = DEFAULT_COLOR;\r\n            prevArray[idx].classList.remove(\"growFind\");\r\n            prevArray[idx].classList.remove(\"highlight\");\r\n        }\r\n        for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\r\n            array.push(randomIntFromInterval(5, 730));\r\n        }\r\n        this.setState({ array, found, disabled, msgAfterExecution: \"\" });\r\n    }\r\n\r\n    linearSearch() {\r\n        var msg = \"\";\r\n        const target = document.getElementById(\"targetVal\").value;\r\n        if (target === \"\") return;\r\n        const animations = linearSearchAnimations(this.state.array, target);\r\n        console.log(animations);\r\n        let count = 0;\r\n\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const [idx, currentEle, found] = animations[i];\r\n            const arrayBars = document.getElementsByClassName(\"l-array-bar\");\r\n            const arrayBar = arrayBars[idx];\r\n            const arrayBarStyle = arrayBar.style;\r\n\r\n            count++;\r\n\r\n            if (found) {\r\n                msg = `${currentEle} found at index ${idx}`;\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        found: true,\r\n                        disabled: true,\r\n                        elementFoundAt: idx,\r\n                        target: currentEle,\r\n                    });\r\n                    arrayBarStyle.backgroundColor = FOUND_COLOR;\r\n                    arrayBar.classList.add(\"growFind\");\r\n                    arrayBar.classList.add(\"highlight\");\r\n                }, i * ANIMATION_SPEED_SECONDS * 1000);\r\n                break;\r\n            } else {\r\n                msg = `${target} not found`;\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        found: false,\r\n                        disabled: true,\r\n                    });\r\n                    arrayBarStyle.backgroundColor = NOT_FOUND_COLOR;\r\n                    arrayBar.classList.add(\"growFind\");\r\n                }, i * ANIMATION_SPEED_SECONDS * 1000);\r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            this.setState({\r\n                disabled: false,\r\n                msgAfterExecution: msg,\r\n            });\r\n        }, (count + 1) * ANIMATION_SPEED_SECONDS * 1000);\r\n    }\r\n\r\n    render() {\r\n        const { array, found, disabled, msgAfterExecution } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <BackBar />\r\n                <div className=\"jumbotron jumbotron-fluid bg-light\">\r\n                    <center>\r\n                        <Header title=\"Linear Search\" />\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-1\"></div>\r\n                                <div className=\"input-group col-sm-10\">\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        id=\"targetVal\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Find Element\"\r\n                                    />\r\n                                    <div className=\"input-group-append\">\r\n                                        <button\r\n                                            onClick={() => this.linearSearch()}\r\n                                            className=\"btn btn-success\"\r\n                                            type=\"button\"\r\n                                            id=\"button-addon2\"\r\n                                            disabled={disabled}\r\n                                        >\r\n                                            Search\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={() => this.resetArray()}\r\n                                            className=\"btn btn-danger\"\r\n                                            id=\"resetArray\"\r\n                                            type=\"button\"\r\n                                            disabled={disabled}\r\n                                        >\r\n                                            Reset Array\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-1 \"></div>\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        {!found ? (\r\n                            <p className=\"found growFind\">\r\n                                {msgAfterExecution}\r\n                            </p>\r\n                        ) : null}\r\n                        <div className=\"container\">\r\n                            {array.map((value, idx) => (\r\n                                <ArrayTile\r\n                                    type={`linearSearch`}\r\n                                    key={idx}\r\n                                    idx={idx}\r\n                                    val={value}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </center>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}