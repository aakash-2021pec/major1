{"ast":null,"code":"function getNodeNeighbors(row, col, ROWS, COLS) {\n  const nodeArray = [];\n\n  for (let i = 0, j = 0; i < ROWS || j < COLS; i++, j++) {\n    nodeArray.push([row, i]);\n    nodeArray.push([j, col]);\n  }\n\n  return nodeArray;\n}\n\nexport function highlightGrid(row, col, ROWS, COLS) {\n  const nodeArray = getNodeNeighbors(row, col, ROWS, COLS);\n\n  for (const nodeVal of nodeArray) {\n    const [nRow, nCol] = nodeVal;\n    const node = document.getElementById(`node-${nRow}-${nCol}`);\n\n    if (nRow === parseInt(ROWS / 2)) {\n      node.classList.add(\"plus-center\");\n    } else {\n      node.classList.add(\"plus\");\n    }\n\n    if (nCol === parseInt(COLS / 2)) {\n      node.classList.add(\"plus-center\");\n    } else {\n      node.classList.add(\"plus\");\n    }\n  }\n}\nexport function unHighlightGrid(row, col, ROWS, COLS) {\n  const nodeArray = getNodeNeighbors(row, col, ROWS, COLS);\n\n  for (const nodeVal of nodeArray) {\n    const [nRow, nCol] = nodeVal;\n    const node = document.getElementById(`node-${nRow}-${nCol}`);\n\n    if (nRow === parseInt(ROWS / 2)) {\n      node.classList.remove(\"plus-center\");\n    } else {\n      node.classList.remove(\"plus\");\n    }\n\n    if (nCol === parseInt(COLS / 2)) {\n      node.classList.remove(\"plus-center\");\n    } else {\n      node.classList.remove(\"plus\");\n    }\n  }\n}\nexport function highlightGridDiagonals(nodes = [], ROWS, COLS) {\n  for (let i = 0; i < ROWS; i++) {\n    for (let j = 0; j < COLS; j++) {\n      const {\n        row,\n        col\n      } = nodes[i][j];\n\n      if (row === col) {\n        document.getElementById(`node-${row}-${col}`).classList.add(\"plus-center\");\n      }\n    }\n  }\n\n  for (let i = ROWS - 1; i >= 0; i--) {\n    for (let j = 0; j < COLS; j++) {\n      if (i + j === parseInt((ROWS - 1 + COLS) / 2)) {\n        document.getElementById(`node-${i}-${j}`).classList.add(\"plus-center\");\n      }\n    }\n  }\n}\nexport function unHighlightGridDiagonals(nodes = [], ROWS, COLS) {\n  for (let i = 0; i < ROWS; i++) {\n    for (let j = 0; j < COLS; j++) {\n      const {\n        row,\n        col\n      } = nodes[i][j];\n\n      if (row === col) {\n        document.getElementById(`node-${row}-${col}`).classList.remove(\"plus-center\");\n      }\n    }\n  }\n\n  for (let i = ROWS - 1; i >= 0; i--) {\n    for (let j = 0; j < COLS; j++) {\n      if (i + j === parseInt((ROWS - 1 + COLS) / 2)) {\n        document.getElementById(`node-${i}-${j}`).classList.remove(\"plus-center\");\n      }\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/sharm/OneDrive/Documents/GitHub/major1/algorithms-visualiser/src/pathFinderVisualiser/pathfinder-utils/highlightMazeNodes.js"],"names":["getNodeNeighbors","row","col","ROWS","COLS","nodeArray","i","j","push","highlightGrid","nodeVal","nRow","nCol","node","document","getElementById","parseInt","classList","add","unHighlightGrid","remove","highlightGridDiagonals","nodes","unHighlightGridDiagonals"],"mappings":"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","sourcesContent":["function getNodeNeighbors(row, col, ROWS, COLS) {\r\n    const nodeArray = [];\r\n    for (let i = 0, j = 0; i < ROWS || j < COLS; i++, j++) {\r\n        nodeArray.push([row, i]);\r\n        nodeArray.push([j, col]);\r\n    }\r\n    return nodeArray;\r\n}\r\n\r\nexport function highlightGrid(row, col, ROWS, COLS) {\r\n    const nodeArray = getNodeNeighbors(row, col, ROWS, COLS);\r\n    for (const nodeVal of nodeArray) {\r\n        const [nRow, nCol] = nodeVal;\r\n        const node = document.getElementById(`node-${nRow}-${nCol}`);\r\n\r\n        if (nRow === parseInt(ROWS / 2)) {\r\n            node.classList.add(\"plus-center\");\r\n        } else {\r\n            node.classList.add(\"plus\");\r\n        }\r\n\r\n        if (nCol === parseInt(COLS / 2)) {\r\n            node.classList.add(\"plus-center\");\r\n        } else {\r\n            node.classList.add(\"plus\");\r\n        }\r\n    }\r\n}\r\n\r\nexport function unHighlightGrid(row, col, ROWS, COLS) {\r\n    const nodeArray = getNodeNeighbors(row, col, ROWS, COLS);\r\n    for (const nodeVal of nodeArray) {\r\n        const [nRow, nCol] = nodeVal;\r\n        const node = document.getElementById(`node-${nRow}-${nCol}`);\r\n\r\n        if (nRow === parseInt(ROWS / 2)) {\r\n            node.classList.remove(\"plus-center\");\r\n        } else {\r\n            node.classList.remove(\"plus\");\r\n        }\r\n\r\n        if (nCol === parseInt(COLS / 2)) {\r\n            node.classList.remove(\"plus-center\");\r\n        } else {\r\n            node.classList.remove(\"plus\");\r\n        }\r\n    }\r\n}\r\n\r\nexport function highlightGridDiagonals(nodes = [], ROWS, COLS) {\r\n    for (let i = 0; i < ROWS; i++) {\r\n        for (let j = 0; j < COLS; j++) {\r\n            const { row, col } = nodes[i][j];\r\n            if (row === col) {\r\n                document\r\n                    .getElementById(`node-${row}-${col}`)\r\n                    .classList.add(\"plus-center\");\r\n            }\r\n        }\r\n    }\r\n    for (let i = ROWS - 1; i >= 0; i--) {\r\n        for (let j = 0; j < COLS; j++) {\r\n            if (i + j === parseInt((ROWS - 1 + COLS) / 2)) {\r\n                document\r\n                    .getElementById(`node-${i}-${j}`)\r\n                    .classList.add(\"plus-center\");\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function unHighlightGridDiagonals(nodes = [], ROWS, COLS) {\r\n    for (let i = 0; i < ROWS; i++) {\r\n        for (let j = 0; j < COLS; j++) {\r\n            const { row, col } = nodes[i][j];\r\n            if (row === col) {\r\n                document\r\n                    .getElementById(`node-${row}-${col}`)\r\n                    .classList.remove(\"plus-center\");\r\n            }\r\n        }\r\n    }\r\n    for (let i = ROWS - 1; i >= 0; i--) {\r\n        for (let j = 0; j < COLS; j++) {\r\n            if (i + j === parseInt((ROWS - 1 + COLS) / 2)) {\r\n                document\r\n                    .getElementById(`node-${i}-${j}`)\r\n                    .classList.remove(\"plus-center\");\r\n            }\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}