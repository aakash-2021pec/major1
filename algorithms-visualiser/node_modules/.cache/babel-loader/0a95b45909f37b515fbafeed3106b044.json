{"ast":null,"code":"export function linearSearchAnimations(array, target) {\n  let animations = [];\n\n  for (let i = 0; i < array.length; i++) {\n    const ele = array[i];\n    const tar = parseInt(target);\n\n    if (ele === tar) {\n      animations.push([i, ele, true]);\n      break;\n    } else {\n      animations.push([i, ele, false]);\n    }\n  }\n\n  return animations;\n}\nexport function binarySearchAnimations(array, left, right, element, animations = []) {\n  if (right >= left) {\n    let mid = parseInt(left + (right - left) / 2);\n\n    if (array[mid] === element) {\n      animations.push([left, right, mid, true]);\n      return true;\n    } else if (array[mid] > element) {\n      animations.push([left, right, mid, false]);\n      binarySearchAnimations(array, left, mid - 1, element, animations);\n    } else {\n      animations.push([left, right, mid, false]);\n      binarySearchAnimations(array, mid + 1, right, element, animations);\n    }\n\n    return false;\n  }\n}","map":{"version":3,"sources":["C:/Users/sharm/OneDrive/Documents/GitHub/major1/algorithms-visualiser/src/searchingAlgorithms/searchingAlgorithms.js"],"names":["linearSearchAnimations","array","target","animations","i","length","ele","tar","parseInt","push","binarySearchAnimations","left","right","element","mid"],"mappings":"AAAA,OAAO,SAASA,sBAAT,CAAgCC,KAAhC,EAAuCC,MAAvC,EAA+C;AAClD,MAAIC,UAAU,GAAG,EAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,UAAME,GAAG,GAAGL,KAAK,CAACG,CAAD,CAAjB;AACA,UAAMG,GAAG,GAAGC,QAAQ,CAACN,MAAD,CAApB;;AACA,QAAII,GAAG,KAAKC,GAAZ,EAAiB;AACbJ,MAAAA,UAAU,CAACM,IAAX,CAAgB,CAACL,CAAD,EAAIE,GAAJ,EAAS,IAAT,CAAhB;AACA;AACH,KAHD,MAGO;AACHH,MAAAA,UAAU,CAACM,IAAX,CAAgB,CAACL,CAAD,EAAIE,GAAJ,EAAS,KAAT,CAAhB;AACH;AACJ;;AACD,SAAOH,UAAP;AACH;AAED,OAAO,SAASO,sBAAT,CACHT,KADG,EAEHU,IAFG,EAGHC,KAHG,EAIHC,OAJG,EAKHV,UAAU,GAAG,EALV,EAML;AACE,MAAIS,KAAK,IAAID,IAAb,EAAmB;AACf,QAAIG,GAAG,GAAGN,QAAQ,CAACG,IAAI,GAAG,CAACC,KAAK,GAAGD,IAAT,IAAiB,CAAzB,CAAlB;;AACA,QAAIV,KAAK,CAACa,GAAD,CAAL,KAAeD,OAAnB,EAA4B;AACxBV,MAAAA,UAAU,CAACM,IAAX,CAAgB,CAACE,IAAD,EAAOC,KAAP,EAAcE,GAAd,EAAmB,IAAnB,CAAhB;AACA,aAAO,IAAP;AACH,KAHD,MAGO,IAAIb,KAAK,CAACa,GAAD,CAAL,GAAaD,OAAjB,EAA0B;AAC7BV,MAAAA,UAAU,CAACM,IAAX,CAAgB,CAACE,IAAD,EAAOC,KAAP,EAAcE,GAAd,EAAmB,KAAnB,CAAhB;AACAJ,MAAAA,sBAAsB,CAACT,KAAD,EAAQU,IAAR,EAAcG,GAAG,GAAG,CAApB,EAAuBD,OAAvB,EAAgCV,UAAhC,CAAtB;AACH,KAHM,MAGA;AACHA,MAAAA,UAAU,CAACM,IAAX,CAAgB,CAACE,IAAD,EAAOC,KAAP,EAAcE,GAAd,EAAmB,KAAnB,CAAhB;AACAJ,MAAAA,sBAAsB,CAACT,KAAD,EAAQa,GAAG,GAAG,CAAd,EAAiBF,KAAjB,EAAwBC,OAAxB,EAAiCV,UAAjC,CAAtB;AACH;;AACD,WAAO,KAAP;AACH;AACJ","sourcesContent":["export function linearSearchAnimations(array, target) {\r\n    let animations = [];\r\n    for (let i = 0; i < array.length; i++) {\r\n        const ele = array[i];\r\n        const tar = parseInt(target);\r\n        if (ele === tar) {\r\n            animations.push([i, ele, true]);\r\n            break;\r\n        } else {\r\n            animations.push([i, ele, false]);\r\n        }\r\n    }\r\n    return animations;\r\n}\r\n\r\nexport function binarySearchAnimations(\r\n    array,\r\n    left,\r\n    right,\r\n    element,\r\n    animations = []\r\n) {\r\n    if (right >= left) {\r\n        let mid = parseInt(left + (right - left) / 2);\r\n        if (array[mid] === element) {\r\n            animations.push([left, right, mid, true]);\r\n            return true;\r\n        } else if (array[mid] > element) {\r\n            animations.push([left, right, mid, false]);\r\n            binarySearchAnimations(array, left, mid - 1, element, animations);\r\n        } else {\r\n            animations.push([left, right, mid, false]);\r\n            binarySearchAnimations(array, mid + 1, right, element, animations);\r\n        }\r\n        return false;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}