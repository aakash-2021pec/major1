{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sharm\\\\OneDrive\\\\Documents\\\\GitHub\\\\major1\\\\algorithms-visualiser\\\\src\\\\backTrackingAlgorithms\\\\ratInAMaze\\\\ratInAMaze.jsx\";\nimport React from \"react\";\nimport BackBar from \"./../../utils/backbar\";\nimport { solveMaze, prepareSolutionBoardOfZeroes } from \"./../backTrackingAlgorithms\";\nimport { randomIntFromInterval } from \"./../../utils/randomIntFromInterval\"; // Stylesheets\n\nimport \"./ratInAMaze.css\";\nimport MAZES from \"./arrayofMazes\";\nconst MAZE = MAZES[randomIntFromInterval(0, MAZES.length - 1)]; // const MAZE = MAZES[2];\n\nconst SOL = prepareSolutionBoardOfZeroes(MAZE.length);\nconst NO_PATH_COLOR = \"#ededed\";\nconst PATH_COLOR = \"#ADD2FE\";\nconst SAFE_COLOR = \"#B0FCEF\";\nconst ANIMATION_SPEED_MS = 1000;\nexport default class RatInAMazeProblem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.drawBoard(MAZE);\n  }\n\n  testAlgo() {\n    const sol = solveMaze(MAZE, SOL, []);\n    const animations = sol[1];\n    const solution = sol[0];\n    const blocks = document.getElementsByClassName(\"r-array-tile\");\n    const rat = document.getElementsByClassName(\"rat\");\n    let count = 0;\n    const finalPath = [];\n\n    for (let i = 0; i < solution.length; i++) {\n      for (let j = 0; j < solution.length; j++) {\n        let idx = MAZE.length * i + j;\n\n        if (solution[i][j] === 1) {\n          finalPath.push(idx);\n        }\n      }\n    }\n\n    for (let i = 0; i < animations.length; i++) {\n      const [x, y, isRatSafe] = animations[i]; // current\n\n      const idx = x * MAZE.length + y;\n      const blockStyle = blocks[idx].style;\n      setTimeout(() => {\n        if (isRatSafe) {\n          blockStyle.backgroundColor = SAFE_COLOR;\n          rat[idx].innerHTML = \"🐀\";\n          rat[idx].classList.add(\"flipH\");\n        } else {\n          blockStyle.backgroundColor = PATH_COLOR;\n          rat[idx].innerHTML = \"\";\n          rat[idx].classList.remove(\"flipH\");\n        }\n      }, i * ANIMATION_SPEED_MS);\n      count = i;\n    }\n\n    setTimeout(() => {\n      for (let i = 0; i < finalPath.length; i++) {\n        setTimeout(() => {\n          blocks[finalPath[i]].classList.add(\"highlightPath\");\n        }, i * 40);\n      }\n    }, (count + 1) * ANIMATION_SPEED_MS);\n  }\n\n  drawBoard(MAZE = []) {\n    const ROWS = MAZE.length;\n    const COLS = MAZE[0].length;\n    const maze = document.getElementById(\"ratMazeBoard\");\n    maze.innerHTML = \"\";\n    maze.style.setProperty(\"--Rgrid-rows\", ROWS);\n    maze.style.setProperty(\"--Rgrid-cols\", COLS);\n\n    for (let i = 0; i < ROWS; i++) {\n      for (let j = 0; j < COLS; j++) {\n        let cell = document.createElement(\"div\");\n        let item = document.createElement(\"i\");\n        let cellStyle = cell.style;\n        cell.appendChild(item).className = \"fas rat\";\n\n        if (i === 0 && j === 0) {\n          cell.appendChild(item).classList.add(\"flipH\");\n          item.innerHTML = \"🐀\";\n        }\n\n        if (i === ROWS - 1 && j === COLS - 1) {\n          cell.appendChild(item).classList.add(\"flipH\");\n          item.innerHTML = \"🚪\";\n        }\n\n        if (MAZE[i][j] === 1) {\n          cellStyle.backgroundColor = PATH_COLOR;\n        } else {\n          cellStyle.backgroundColor = NO_PATH_COLOR;\n        }\n\n        maze.appendChild(cell).className = \"Rgrid-item r-array-tile\";\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BackBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text-center mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, \"Rat In A Maze\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Rbox Rboard mt-2\",\n      id: \"ratMazeBoard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-5 mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.testAlgo(),\n      className: \"btn btn-sm btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, \"Visualize Algorithm\")))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/sharm/OneDrive/Documents/GitHub/major1/algorithms-visualiser/src/backTrackingAlgorithms/ratInAMaze/ratInAMaze.jsx"],"names":["React","BackBar","solveMaze","prepareSolutionBoardOfZeroes","randomIntFromInterval","MAZES","MAZE","length","SOL","NO_PATH_COLOR","PATH_COLOR","SAFE_COLOR","ANIMATION_SPEED_MS","RatInAMazeProblem","Component","constructor","props","state","componentDidMount","drawBoard","testAlgo","sol","animations","solution","blocks","document","getElementsByClassName","rat","count","finalPath","i","j","idx","push","x","y","isRatSafe","blockStyle","style","setTimeout","backgroundColor","innerHTML","classList","add","remove","ROWS","COLS","maze","getElementById","setProperty","cell","createElement","item","cellStyle","appendChild","className","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport BackBar from \"./../../utils/backbar\";\r\n\r\nimport {\r\n    solveMaze,\r\n    prepareSolutionBoardOfZeroes,\r\n} from \"./../backTrackingAlgorithms\";\r\nimport { randomIntFromInterval } from \"./../../utils/randomIntFromInterval\";\r\n// Stylesheets\r\nimport \"./ratInAMaze.css\";\r\n\r\nimport MAZES from \"./arrayofMazes\";\r\n\r\nconst MAZE = MAZES[randomIntFromInterval(0, MAZES.length - 1)];\r\n// const MAZE = MAZES[2];\r\nconst SOL = prepareSolutionBoardOfZeroes(MAZE.length);\r\n\r\nconst NO_PATH_COLOR = \"#ededed\";\r\nconst PATH_COLOR = \"#ADD2FE\";\r\nconst SAFE_COLOR = \"#B0FCEF\";\r\n\r\nconst ANIMATION_SPEED_MS = 1000;\r\n\r\nexport default class RatInAMazeProblem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.drawBoard(MAZE);\r\n    }\r\n\r\n    testAlgo() {\r\n        const sol = solveMaze(MAZE, SOL, []);\r\n\r\n        const animations = sol[1];\r\n        const solution = sol[0];\r\n\r\n        const blocks = document.getElementsByClassName(\"r-array-tile\");\r\n        const rat = document.getElementsByClassName(\"rat\");\r\n        let count = 0;\r\n\r\n        const finalPath = [];\r\n        for (let i = 0; i < solution.length; i++) {\r\n            for (let j = 0; j < solution.length; j++) {\r\n                let idx = MAZE.length * i + j;\r\n                if (solution[i][j] === 1) {\r\n                    finalPath.push(idx);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const [x, y, isRatSafe] = animations[i]; // current\r\n            const idx = x * MAZE.length + y;\r\n            const blockStyle = blocks[idx].style;\r\n\r\n            setTimeout(() => {\r\n                if (isRatSafe) {\r\n                    blockStyle.backgroundColor = SAFE_COLOR;\r\n                    rat[idx].innerHTML = \"🐀\";\r\n                    rat[idx].classList.add(\"flipH\");\r\n                } else {\r\n                    blockStyle.backgroundColor = PATH_COLOR;\r\n                    rat[idx].innerHTML = \"\";\r\n                    rat[idx].classList.remove(\"flipH\");\r\n                }\r\n            }, i * ANIMATION_SPEED_MS);\r\n            count = i;\r\n        }\r\n\r\n        setTimeout(() => {\r\n            for (let i = 0; i < finalPath.length; i++) {\r\n                setTimeout(() => {\r\n                    blocks[finalPath[i]].classList.add(\"highlightPath\");\r\n                }, i * 40);\r\n            }\r\n        }, (count + 1) * ANIMATION_SPEED_MS);\r\n    }\r\n\r\n    drawBoard(MAZE = []) {\r\n        const ROWS = MAZE.length;\r\n        const COLS = MAZE[0].length;\r\n\r\n        const maze = document.getElementById(\"ratMazeBoard\");\r\n        maze.innerHTML = \"\";\r\n\r\n        maze.style.setProperty(\"--Rgrid-rows\", ROWS);\r\n        maze.style.setProperty(\"--Rgrid-cols\", COLS);\r\n\r\n        for (let i = 0; i < ROWS; i++) {\r\n            for (let j = 0; j < COLS; j++) {\r\n                let cell = document.createElement(\"div\");\r\n                let item = document.createElement(\"i\");\r\n                let cellStyle = cell.style;\r\n                cell.appendChild(item).className = \"fas rat\";\r\n\r\n                if (i === 0 && j === 0) {\r\n                    cell.appendChild(item).classList.add(\"flipH\");\r\n                    item.innerHTML = \"🐀\";\r\n                }\r\n\r\n                if (i === ROWS - 1 && j === COLS - 1) {\r\n                    cell.appendChild(item).classList.add(\"flipH\");\r\n                    item.innerHTML = \"🚪\";\r\n                }\r\n\r\n                if (MAZE[i][j] === 1) {\r\n                    cellStyle.backgroundColor = PATH_COLOR;\r\n                } else {\r\n                    cellStyle.backgroundColor = NO_PATH_COLOR;\r\n                }\r\n\r\n                maze.appendChild(cell).className = \"Rgrid-item r-array-tile\";\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <BackBar />\r\n                <h2 className=\"text-center mt-2\">Rat In A Maze</h2>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-7\">\r\n                            <div\r\n                                className=\"Rbox Rboard mt-2\"\r\n                                id=\"ratMazeBoard\"\r\n                            ></div>\r\n                        </div>\r\n                        <div className=\"col-sm-5 mt-2\">\r\n                            <button\r\n                                onClick={() => this.testAlgo()}\r\n                                className=\"btn btn-sm btn-primary\"\r\n                            >\r\n                                Visualize Algorithm\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}