{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sharm\\\\OneDrive\\\\Documents\\\\GitHub\\\\major1\\\\algorithms-visualiser\\\\src\\\\wordSearchVisualiser\\\\wordSearch.jsx\";\nimport React from \"react\";\nimport CHARS from \"./wordSearch-utils/chars\";\nimport Cell from \"./Cell/Cell\";\nimport { randomIntFromInterval } from \"./../utils/randomIntFromInterval\";\nimport { wordDFS } from \"./algorithms/wordDFS\";\nimport BackBar from \"./../utils/backbar\";\nimport ProblemStatement from \"./wordSearch-utils/problemStatement\";\nconst BOARD_SIZE = 10;\nexport default class WordSearch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: [],\n      disabled: false\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  clearBoard() {\n    for (let i = 0; i < BOARD_SIZE; i++) {\n      for (let j = 0; j < BOARD_SIZE; j++) {\n        let cell = document.getElementById(`cell-${i}-${j}`);\n        cell.className = \"ws-cell default-cell\";\n        console.log(cell);\n      }\n    }\n  }\n\n  newBoard() {\n    this.clearBoard();\n    this.resetArray();\n  }\n\n  resetArray() {\n    const gridBox = document.getElementById(\"ws-grid\");\n    gridBox.style.setProperty(\"--ws-grid-rows\", BOARD_SIZE);\n    gridBox.style.setProperty(\"--ws-grid-cols\", BOARD_SIZE);\n    const array = new Array(BOARD_SIZE);\n\n    for (let i = 0; i < BOARD_SIZE; i++) {\n      array[i] = new Array(BOARD_SIZE);\n\n      for (let j = 0; j < BOARD_SIZE; j++) {\n        array[i][j] = {\n          row: i,\n          col: j,\n          val: CHARS[randomIntFromInterval(0, CHARS.length - 1)],\n          found: false,\n          visited: false\n        };\n      }\n    }\n\n    this.setState({\n      grid: array\n    });\n  }\n\n  visualiseWordSearch() {\n    const word = document.getElementById(\"word\").value.toUpperCase();\n\n    if (!word) {\n      alert(\"Word must be provided\");\n      return;\n    }\n\n    this.setState({\n      disabled: true\n    });\n    const animations = [];\n    const {\n      grid\n    } = this.state;\n    wordDFS(grid, word, animations);\n    const founds = animations.slice();\n    const highlightSection = [];\n\n    for (let k = 0; k < founds.length; k++) {\n      const [i, j, test, found] = founds[k];\n      if (found === \"found\") highlightSection.push([i, j]);\n    }\n\n    for (let i = 0; i < animations.length; i++) {\n      const [row, col, testing, found] = animations[i];\n      const cell = document.getElementById(`cell-${row}-${col}`);\n      setTimeout(() => {\n        if (testing === \"testing\") {\n          cell.classList = \"ws-cell testing\";\n        } else if (found === \"found\") {\n          cell.classList = \"ws-cell found-cell\";\n        } else {\n          cell.classList = \"ws-cell not-found-cell\";\n        }\n\n        cell.style.transition = \"500ms all\";\n\n        if (i === animations.length - 1) {\n          this.setState({\n            disabled: false\n          });\n\n          for (let k = 0; k < highlightSection.length; k++) {\n            const [i, j] = highlightSection[k];\n            setTimeout(() => {\n              document.getElementById(`cell-${i}-${j}`).classList.add(\"ws-popupBlocks\");\n            }, k * 50);\n          }\n        }\n      }, i * 500);\n    }\n  }\n\n  render() {\n    const {\n      grid,\n      disabled\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BackBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-7 mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ws-box rounded shadowB\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ws-grid\",\n      id: \"ws-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }, grid.map(ele => {\n      return ele.map((cell, idx) => {\n        const {\n          row,\n          col,\n          val,\n          found,\n          visited\n        } = cell;\n        return /*#__PURE__*/React.createElement(Cell, {\n          key: `${row}-${col}`,\n          row: row,\n          col: col,\n          val: val,\n          visited: visited,\n          found: found,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 49\n          }\n        });\n      });\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-5 mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"input-group-text\",\n      id: \"basic-addon2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }\n    }, \"Word\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"word\",\n      className: \"form-control\",\n      placeholder: \"Ex. BINOD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-group btn-block mt-2\",\n      role: \"group\",\n      \"aria-label\": \"Basic example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.clearBoard(),\n      type: \"button\",\n      disabled: disabled,\n      className: \"btn btn-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 33\n      }\n    }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.newBoard(),\n      type: \"button\",\n      disabled: disabled,\n      className: \"btn btn-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 33\n      }\n    }, \"New\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.visualiseWordSearch(),\n      type: \"button\",\n      disabled: disabled,\n      className: \"btn btn-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 33\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(ProblemStatement, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/sharm/OneDrive/Documents/GitHub/major1/algorithms-visualiser/src/wordSearchVisualiser/wordSearch.jsx"],"names":["React","CHARS","Cell","randomIntFromInterval","wordDFS","BackBar","ProblemStatement","BOARD_SIZE","WordSearch","Component","constructor","props","state","grid","disabled","componentDidMount","resetArray","clearBoard","i","j","cell","document","getElementById","className","console","log","newBoard","gridBox","style","setProperty","array","Array","row","col","val","length","found","visited","setState","visualiseWordSearch","word","value","toUpperCase","alert","animations","founds","slice","highlightSection","k","test","push","testing","setTimeout","classList","transition","add","render","map","ele","idx"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport CHARS from \"./wordSearch-utils/chars\";\r\nimport Cell from \"./Cell/Cell\";\r\nimport { randomIntFromInterval } from \"./../utils/randomIntFromInterval\";\r\n\r\nimport { wordDFS } from \"./algorithms/wordDFS\";\r\nimport BackBar from \"./../utils/backbar\";\r\nimport ProblemStatement from \"./wordSearch-utils/problemStatement\";\r\n\r\nconst BOARD_SIZE = 10;\r\n\r\nexport default class WordSearch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            grid: [],\r\n            disabled: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resetArray();\r\n    }\r\n\r\n    clearBoard() {\r\n        for (let i = 0; i < BOARD_SIZE; i++) {\r\n            for (let j = 0; j < BOARD_SIZE; j++) {\r\n                let cell = document.getElementById(`cell-${i}-${j}`);\r\n                cell.className = \"ws-cell default-cell\";\r\n                console.log(cell);\r\n            }\r\n        }\r\n    }\r\n\r\n    newBoard() {\r\n        this.clearBoard();\r\n        this.resetArray();\r\n    }\r\n\r\n    resetArray() {\r\n        const gridBox = document.getElementById(\"ws-grid\");\r\n        gridBox.style.setProperty(\"--ws-grid-rows\", BOARD_SIZE);\r\n        gridBox.style.setProperty(\"--ws-grid-cols\", BOARD_SIZE);\r\n\r\n        const array = new Array(BOARD_SIZE);\r\n        for (let i = 0; i < BOARD_SIZE; i++) {\r\n            array[i] = new Array(BOARD_SIZE);\r\n            for (let j = 0; j < BOARD_SIZE; j++) {\r\n                array[i][j] = {\r\n                    row: i,\r\n                    col: j,\r\n                    val: CHARS[randomIntFromInterval(0, CHARS.length - 1)],\r\n                    found: false,\r\n                    visited: false,\r\n                };\r\n            }\r\n        }\r\n\r\n        this.setState({ grid: array });\r\n    }\r\n\r\n    visualiseWordSearch() {\r\n        const word = document.getElementById(\"word\").value.toUpperCase();\r\n\r\n        if (!word) {\r\n            alert(\"Word must be provided\");\r\n            return;\r\n        }\r\n\r\n        this.setState({ disabled: true });\r\n\r\n        const animations = [];\r\n        const { grid } = this.state;\r\n        wordDFS(grid, word, animations);\r\n\r\n        const founds = animations.slice();\r\n        const highlightSection = [];\r\n        for (let k = 0; k < founds.length; k++) {\r\n            const [i, j, test, found] = founds[k];\r\n            if (found === \"found\") highlightSection.push([i, j]);\r\n        }\r\n\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const [row, col, testing, found] = animations[i];\r\n            const cell = document.getElementById(`cell-${row}-${col}`);\r\n            setTimeout(() => {\r\n                if (testing === \"testing\") {\r\n                    cell.classList = \"ws-cell testing\";\r\n                } else if (found === \"found\") {\r\n                    cell.classList = \"ws-cell found-cell\";\r\n                } else {\r\n                    cell.classList = \"ws-cell not-found-cell\";\r\n                }\r\n                cell.style.transition = \"500ms all\";\r\n\r\n                if (i === animations.length - 1) {\r\n                    this.setState({ disabled: false });\r\n                    for (let k = 0; k < highlightSection.length; k++) {\r\n                        const [i, j] = highlightSection[k];\r\n                        setTimeout(() => {\r\n                            document\r\n                                .getElementById(`cell-${i}-${j}`)\r\n                                .classList.add(\"ws-popupBlocks\");\r\n                        }, k * 50);\r\n                    }\r\n                }\r\n            }, i * 500);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { grid, disabled } = this.state;\r\n        return (\r\n            <div>\r\n                <BackBar />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-7 mt-1\">\r\n                            <div className=\"ws-box rounded shadowB\">\r\n                                <div className=\"ws-grid\" id=\"ws-grid\">\r\n                                    {grid.map((ele) => {\r\n                                        return ele.map((cell, idx) => {\r\n                                            const {\r\n                                                row,\r\n                                                col,\r\n                                                val,\r\n                                                found,\r\n                                                visited,\r\n                                            } = cell;\r\n                                            return (\r\n                                                <Cell\r\n                                                    key={`${row}-${col}`}\r\n                                                    row={row}\r\n                                                    col={col}\r\n                                                    val={val}\r\n                                                    visited={visited}\r\n                                                    found={found}\r\n                                                />\r\n                                            );\r\n                                        });\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-5 mt-2\">\r\n                            <div className=\"input-group\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span\r\n                                        className=\"input-group-text\"\r\n                                        id=\"basic-addon2\"\r\n                                    >\r\n                                        Word\r\n                                    </span>\r\n                                </div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"word\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Ex. BINOD\"\r\n                                />\r\n                            </div>\r\n                            <div\r\n                                className=\"btn-group btn-block mt-2\"\r\n                                role=\"group\"\r\n                                aria-label=\"Basic example\"\r\n                            >\r\n                                <button\r\n                                    onClick={() => this.clearBoard()}\r\n                                    type=\"button\"\r\n                                    disabled={disabled}\r\n                                    className=\"btn btn-danger\"\r\n                                >\r\n                                    Reset\r\n                                </button>\r\n                                <button\r\n                                    onClick={() => this.newBoard()}\r\n                                    type=\"button\"\r\n                                    disabled={disabled}\r\n                                    className=\"btn btn-success\"\r\n                                >\r\n                                    New\r\n                                </button>\r\n                                <button\r\n                                    onClick={() => this.visualiseWordSearch()}\r\n                                    type=\"button\"\r\n                                    disabled={disabled}\r\n                                    className=\"btn btn-dark\"\r\n                                >\r\n                                    Search\r\n                                </button>\r\n                            </div>\r\n                            <ProblemStatement />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}